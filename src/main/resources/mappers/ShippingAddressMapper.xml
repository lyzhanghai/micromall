<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.micromall.repository.ShippingAddressMapper">
    <resultMap id="BaseResultMap" type="com.micromall.repository.entity.ShippingAddress">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="county" property="county" jdbcType="VARCHAR"/>
        <result column="detailed_address" property="detailedAddress" jdbcType="VARCHAR"/>
        <result column="consignee_name" property="consigneeName" jdbcType="VARCHAR"/>
        <result column="consignee_phone" property="consigneePhone" jdbcType="VARCHAR"/>
        <result column="postcode" property="postcode" jdbcType="CHAR"/>
        <result column="defaul" property="defaul" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Column_Sql">
        id, uid, province, city, county, detailed_address, consignee_name, consignee_phone, postcode, defaul, create_time, update_time
    </sql>

    <sql id="Where_Clause">
        <if test="criterias != null and valid">
            <where>
                <foreach collection="criterias" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" suffix=")" prefixOverrides="and">
                            <foreach collection="criteria.criterions" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </where>
        </if>
    </sql>

    <insert id="insert" parameterType="com.micromall.repository.entity.ShippingAddress" useGeneratedKeys="true" keyProperty="id">
        insert into shipping_address (<include refid="Column_Sql"/>)
        values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR}, #{county,jdbcType=VARCHAR}, #{detailedAddress,jdbcType=VARCHAR},
        #{consigneeName,jdbcType=VARCHAR}, #{consigneePhone,jdbcType=VARCHAR}, #{postcode,jdbcType=CHAR},
        #{defaul,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateByPrimaryKeyUid" parameterType="com.micromall.repository.entity.ShippingAddress">
        update shipping_address
        <set>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                county = #{county,jdbcType=VARCHAR},
            </if>
            <if test="detailedAddress != null">
                detailed_address = #{detailedAddress,jdbcType=VARCHAR},
            </if>
            <if test="consigneeName != null">
                consignee_name = #{consigneeName,jdbcType=VARCHAR},
            </if>
            <if test="consigneePhone != null">
                consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
            </if>
            <if test="postcode != null">
                postcode = #{postcode,jdbcType=CHAR},
            </if>
            <if test="defaul != null">
                defaul = #{defaul,jdbcType=CHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} and uid = #{uid,jdbcType=INTEGER}
    </update>

    <delete id="deleteByWhereClause" parameterType="com.micromall.utils.Condition">
        delete from shipping_address
        <include refid="Where_Clause"/>
    </delete>

    <select id="selectOneByWhereClause" resultMap="BaseResultMap" parameterType="com.micromall.utils.Condition">
        select
        <include refid="Column_Sql"/>
        from shipping_address
        <include refid="Where_Clause"/>
    </select>

    <select id="selectMultiByWhereClause" resultMap="BaseResultMap" parameterType="com.micromall.utils.Condition">
        select
        <include refid="Column_Sql"/>
        from shipping_address
        <include refid="Where_Clause"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

    <select id="countByWhereClause" parameterType="com.micromall.utils.Condition" resultType="java.lang.Integer">
        select count(*)
        from shipping_address
        <include refid="Where_Clause"/>
    </select>

    <!--
    <update id="updateByPrimaryKey" parameterType="com.micromall.repository.entity.ShippingAddress">
        update shipping_address
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="county != null">
                county = #{county,jdbcType=VARCHAR},
            </if>
            <if test="detailedAddress != null">
                detailed_address = #{detailedAddress,jdbcType=VARCHAR},
            </if>
            <if test="consigneeName != null">
                consignee_name = #{consigneeName,jdbcType=VARCHAR},
            </if>
            <if test="consigneePhone != null">
                consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
            </if>
            <if test="postcode != null">
                postcode = #{postcode,jdbcType=CHAR},
            </if>
            <if test="defaul != null">
                defaul = #{defaul,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from shipping_address
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from shipping_address
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectPageByWhereClause" resultMap="BaseResultMap" parameterType="com.micromall.utils.Condition">
        select
        <include refid="Base_Column_List"/>
        from shipping_address
        <include refid="Where_Clause"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>
    -->

</mapper>