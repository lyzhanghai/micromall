<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.micromall.repository.DistributionRelationMapper">
    <resultMap id="BaseResultMap" type="com.micromall.repository.entity.DistributionRelation">
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="lower_uid" property="lowerUid" jdbcType="INTEGER"/>
        <result column="level" property="level" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Column_sql">
        uid, lower_uid, level, create_time
    </sql>

    <sql id="Where_Clause">
        <if test="criterias != null and valid">
            <where>
                <foreach collection="criterias" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" suffix=")" prefixOverrides="and">
                            <foreach collection="criteria.criterions" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </where>
        </if>
    </sql>

    <insert id="insert" parameterType="com.micromall.repository.entity.DistributionRelation">
        insert into distribution_relation (uid, lower_uid, level,
        create_time)
        values (#{uid,jdbcType=INTEGER}, #{lowerUid,jdbcType=INTEGER}, #{level,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="countByWhereClause" parameterType="com.micromall.utils.Condition" resultType="java.lang.Integer">
        select count(*) from distribution_relation
        <include refid="Where_Clause"/>
    </select>

    <select id="selectLowerMembers" resultType="com.micromall.service.vo.DistributionMember" parameterType="java.util.Map">
        SELECT
        t2.id as 'uid',
        t2.nickname,
        t2.avatar,
        t2.level
        FROM
        distribution_relation t1 LEFT JOIN member t2 ON t1.lower_uid = t2.id
        WHERE
        t1.uid = #{uid}
        <if test="level != null">
            and t1.level=#{level}
        </if>
    </select>

    <select id="lowerMemberStat" resultType="int" parameterType="java.util.Map">
        SELECT count(*) FROM
        distribution_relation t1 LEFT JOIN member t2 ON t1.lower_uid = t2.id
        WHERE
        t1.uid = #{uid}
        <if test="level != null">
            and t1.level=#{level}
        </if>
    </select>

    <!--
    <update id="updateByPrimaryKey" parameterType="com.micromall.repository.entity.CertifiedInfo">

    </update>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    </delete>

    <delete id="deleteByWhereClause" parameterType="com.micromall.utils.Condition">
        delete from distribution_relation
        <include refid="Where_Clause"/>
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">

    </select>

    <select id="selectOneByWhereClause" resultMap="BaseResultMap" parameterType="com.micromall.utils.Condition">
        select
        <include refid="Base_Column_List"/>
        from distribution_relation
        <include refid="Where_Clause"/>
    </select>

    <select id="selectMultiByWhereClause" resultMap="BaseResultMap" parameterType="com.micromall.utils.Condition">
        select
        <include refid="Base_Column_List"/>
        from distribution_relation
        <include refid="Where_Clause"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

    <select id="selectPageByWhereClause" resultMap="BaseResultMap" parameterType="com.micromall.utils.Condition">
        select
        <include refid="Base_Column_List"/>
        from distribution_relation
        <include refid="Where_Clause"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>
    -->
</mapper>