<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.paycenter.repository.PaymentFundInRepository">

    <sql id="all_column">
        id                id,
        order_no          orderNo,
        amount            amount,
        pay_channel       payChannel,
        pay_method        payMethod,
        trade_no          tradeNo,
        ip                ip,
        pay_status        payStatus,
        deleted           deleted,
        create_time       createTime,
        update_time       updateTime
    </sql>

    <sql id="Where_Clause">
        where deleted = 0
        <if test="criterias != null and valid">
            and
            <foreach collection="criterias" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criterions" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </if>
    </sql>

    <insert id="insert" parameterType="com.micromall.repository.entity.PaymentRecord" useGeneratedKeys="true" keyProperty="id">
        insert into payment_record (<include refid="all_column"/>)
        values (
        #{id,jdbcType=INTEGER},
        #{orderNo,jdbcType=VARCHAR},
        #{amount,jdbcType=DECIMAL},
        #{payChannel,jdbcType=VARCHAR},
        #{payMethod,jdbcType=VARCHAR},
        #{tradeNo,jdbcType=VARCHAR},
        #{ip,jdbcType=VARCHAR},
        #{payStatus,jdbcType=VARCHAR},
        #{deleted,jdbcType=CHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.micromall.repository.entity.Goods">
        update goods
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="mainImage != null">
                main_image = #{mainImage,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="inventory != null">
                inventory = #{inventory,jdbcType=INTEGER},
            </if>
            <if test="shelves != null">
                shelves = #{shelves,jdbcType=CHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="promotion != null">
                promotion = #{promotion,jdbcType=CHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=SMALLINT},
            </if>
            <if test="salesVolume != null">
                sales_volume = #{salesVolume,jdbcType=INTEGER},
            </if>
            <!--
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=CHAR},
            </if>
            -->
            <!--
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            -->
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="images != null">
                images = #{images,jdbcType=LONGVARCHAR},
            </if>
            <if test="promotionParams != null">
                promotion_params = #{promotionParams,jdbcType=LONGVARCHAR},
            </if>
            <if test="descr != null">
                descr = #{descr,jdbcType=LONGVARCHAR},
            </if>
            <if test="productParams != null">
                product_params = #{productParams,jdbcType=LONGVARCHAR},
            </if>
            <if test="freight != null">
                freight = #{freight,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} and deleted = 0
    </update>

    <select id="findOneByPrimaryKey" resultType="com.github.paycenter.repository.entity.PaymentFundInInfo" parameterType="java.lang.Integer">
        select
        <include refid="Column_sql"/>
        from goods
        where id = #{id,jdbcType=INTEGER} and deleted = 0
    </select>
    <select id="findOneByCondition" resultType="com.github.paycenter.repository.entity.PaymentFundInInfo"
            parameterType="com.github.paycenter.repository.common.Condition">
        select
        <include refid="Column_sql"/>
        from goods
        <include refid="Condition_Clause"/>
    </select>

    <select id="selectMultiByCondition" resultType="com.github.paycenter.repository.entity.PaymentFundInInfo"
            parameterType="com.github.paycenter.repository.common.Condition">
        select
        <include refid="Column_sql"/>
        from goods
        <include refid="Condition_Clause"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

</mapper> 