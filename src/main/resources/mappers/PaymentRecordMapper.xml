<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.micromall.repository.PaymentRecordMapper">

    <sql id="all_column">
        id id,
        order_no orderNo,
        amount amount,
        trade_no tradeNo,
        ip ip,
        pay_status payStatus,
        deleted deleted,
        create_time createTime,
        update_time updateTime
    </sql>

    <sql id="Where_Clause">
        where deleted = 0
        <if test="criterias != null and valid">
            and
            <foreach collection="criterias" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criterions" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </if>
    </sql>

    <insert id="insert" parameterType="com.micromall.repository.entity.PaymentRecord" useGeneratedKeys="true" keyProperty="id">
        insert into payment_record (id,order_no,amount,trade_no,ip,pay_status,deleted,create_time,update_time)
        values (
        #{id,jdbcType=INTEGER},
        #{orderNo,jdbcType=VARCHAR},
        #{amount,jdbcType=DECIMAL},
        #{tradeNo,jdbcType=VARCHAR},
        #{ip,jdbcType=VARCHAR},
        #{payStatus,jdbcType=VARCHAR},
        #{deleted,jdbcType=CHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.micromall.repository.entity.PaymentRecord">
        update payment_record
        <set>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=CHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectOneByWhereClause" resultType="com.micromall.repository.entity.PaymentRecord" parameterType="com.micromall.utils.Condition">
        select
        <include refid="all_column"/>
        from payment_record
        <include refid="Where_Clause"/>
    </select>

    <select id="selectMultiByWhereClause" resultType="com.micromall.repository.entity.PaymentRecord" parameterType="com.micromall.utils.Condition">
        select
        <include refid="all_column"/>
        from payment_record
        <include refid="Where_Clause"/>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

</mapper> 